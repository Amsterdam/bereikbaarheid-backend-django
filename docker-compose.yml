version: "3.7"

x-app: &app
  build:
    context: .
    target: app
  ports:
    - "8000:8000"
  volumes:
    - ./src:/src
    - ./tests:/tests
    - ./deploy:/deploy
  depends_on:
    - database    


services:
  database:
    ports:
      - "5432"
    environment:
      POSTGRES_DB: bereikbaarheid
      POSTGRES_USER: bereikbaarheid
      POSTGRES_PASSWORD: insecure
    build:
      dockerfile: Dockerfile_pgrouting
#    image: ghcr.io/amsterdam/bereikbaarheid-db:latest  # TODO: Uncomment when Jenkins is no longer used
    networks:
      - backend

  app: 
    <<: *app    
    image: docker-registry.data.amsterdam.nl/datapunt/bereikbaarheid-backend-django:${VERSION:-latest}
    command: /deploy/docker-run.sh

  dev:
    <<: *app
    build:
      target: dev 
    image: docker-registry.data.amsterdam.nl/datapunt/bereikbaarheid-backend-django:${VERSION:-latest}          
    environment:
      - DEBUG=true
      - SECRET_KEY=123456
      - DJANGO_SETTINGS_MODULE=main.settings
      - DATABASE_NAME=bereikbaarheid
      - DATABASE_USER=bereikbaarheid
      - DATABASE_PASSWORD=insecure
    entrypoint: /deploy/wait-for-it.sh database:5432 --            
    command:
      python manage.py runserver 0.0.0.0:8000
    networks:
      - backend

  test:
    <<: *app  
    build:
      target: tests
#    image: ghcr.io/amsterdam/bereikbaarheid:latest  # TODO: Uncomment when Jenkins is no longer used
    environment:
      - DEBUG=true
      - SECRET_KEY=123456
      - DJANGO_SETTINGS_MODULE=main.settings
      - DATABASE_NAME=bereikbaarheid
      - DATABASE_USER=bereikbaarheid
      - DATABASE_PASSWORD=insecure
    entrypoint: /deploy/wait-for-it.sh database:5432 --      
    command:
      pytest
    networks:
      - backend

networks:
  backend:
    name: amsterdam-bereikbaarheid

